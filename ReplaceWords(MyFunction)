#include <iostream>
#include <string>
#include <vector>
using namespace std;
enum  enLetterCase{ MatchCase ,NotMatchCase};
string ReadText()
{
	string text = " ";
	cout << "Enter text: ";
	getline(cin, text);
	return text;
}
string JoinString(vector <string>& vString, string Delim)
{
	string WholeString = "";
	for (string& i : vString)
	{
		WholeString = WholeString + i + Delim;
	}
	return WholeString.substr(0, WholeString.size() - Delim.size());
}
vector<string>SplitString(string str, string Delim)
{
	vector<string>vString;

	short pos = 0;
	string sWord;
	while ((pos = str.find(Delim)) != std::string::npos)
	{
		sWord = str.substr(0, pos);
		if (sWord != "")
		{
			vString.push_back(sWord);
		}
		str.erase(0, pos + Delim.length());
	}
	if (str != "")
	{
		vString.push_back(str);
	}

	return vString;
}
string GetTextLowered(string str)
{
	for (int i = 0; i < str.size(); i++)
	{
		str[i] = char(tolower(str[i]));
	}
	return str;
}
string GetWordsReplacedInString(string str,string strFrom,string strTo, enLetterCase LetterCase=MatchCase)
{
	vector<string>vString;
	string S2 = "";
	vString = SplitString(str, " ");
	for (string& s : vString)
	{
		if (LetterCase == NotMatchCase)

		{
			if (GetTextLowered(s) == GetTextLowered(strFrom))
				s = strTo;
		}
		else
			{
				if (s == strFrom)
					s = strTo;
			}
	}
	
	
	return JoinString(vString," ");
}
int main()
{
	string str = ReadText();
	
	cout<< GetWordsReplacedInString(str,"Jordan", "US") << endl;
	cout << GetWordsReplacedInString(str, "Jordan", "US", NotMatchCase) << endl;
	return 0;
}


