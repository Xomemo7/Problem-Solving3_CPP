#include <iostream>
#include <string>
#include <vector>
#include <fstream>
using namespace std;
const string ClientsFileName="Clients.txt";

struct stClientData
{
	string AccountNum = "";
	string PinCode = "";
	string Name = "";
	string PhoneNum = "";
	double AccountBalance = 0;
};
vector<string>SplitString(string str, string Delim)
{
	vector<string>vString;

	short pos = 0;
	string sWord;
	while ((pos = str.find(Delim)) != std::string::npos)
	{
		sWord = str.substr(0, pos);
		if (sWord != "")
		{
			vString.push_back(sWord);
		}
		str.erase(0, pos + Delim.length());
	}
	if (str != "")
	{
		vString.push_back(str);
	}

	return vString;
}
stClientData ConvertLineToRecord(string LineOfData, string separator = "#//#")
{
	stClientData Client;
	vector<string>vClientData;
	vClientData = SplitString(LineOfData, separator);
	Client.AccountNum = vClientData[0];
	Client.PinCode = vClientData[1];
	Client.Name = vClientData[2];
	Client.PhoneNum = vClientData[3];
	Client.AccountBalance = stod(vClientData[4]);

	return Client;
}
vector<stClientData> LoadClientsDataFromFile(string FileName)
{
	vector<stClientData>vClients;
	
	fstream MyFile;
	MyFile.open(FileName, ios::in);
	if (MyFile.is_open())
	{
		string Line;
		stClientData Client;

		while (getline(MyFile, Line))
		{
			Client = ConvertLineToRecord(Line);
			vClients.push_back(Client);
		}

		MyFile.close();
	}
	return vClients;
}
void PrintClientData(stClientData Client)
{
	cout << "Account number: " << Client.AccountNum << endl;
	cout << "PinCode: " << Client.PinCode << endl;
	cout << "Name: " << Client.Name << endl;
	cout << "Phone number: " << Client.PhoneNum << endl;
	cout << "Account balance: " << Client.AccountBalance << endl;
}
bool FindClientByAccountNumber(stClientData &Client, string AccountNumberToFind)
{
	vector<stClientData> vClients = LoadClientsDataFromFile(ClientsFileName);
	for (stClientData& C : vClients)
	{
		if (C.AccountNum == AccountNumberToFind)
		{
			Client = C;
			return true;
		}
	}
	return false;
}
string ReadClientAccountNumber()
{
	string AccountNumber;
	cout << "Enter account number: ";
	cin >> AccountNumber;
	return AccountNumber;
}
int main()
{
	stClientData Client;
	string AccountNumberToFind= ReadClientAccountNumber();
	cout << endl;
	if (FindClientByAccountNumber(Client, AccountNumberToFind))
		PrintClientData(Client);
	else
		cout<< AccountNumberToFind <<" was not found\n";
	return 0;
}


